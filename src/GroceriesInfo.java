//importing libraries
import Objects.Product;
import com.sun.glass.events.KeyEvent;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.awt.Point;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @SujanChaudhary
 */
public class GroceriesInfo extends javax.swing.JFrame {
    String RecommendedBy;  //Declaration of instance variable
    private ArrayList<Product> products; //Creation of arraylist
    /**
     * Creates new form NewJFrame
     */
    public GroceriesInfo() {
        initComponents();
        this.products = new ArrayList<>();

    }
    //method to add the table datas into the arrayList
    private void displayTableRows( ArrayList<Product> products ) {
        DefaultTableModel tableModel = (DefaultTableModel) jProdTable.getModel(); //get datas from the jProdTable
        tableModel.setRowCount(0); //returns the number of rows from the jProdTable
        products.forEach((prod) -> { //This method 
            tableModel.addRow( prod.getObjectData() );
        });
    }
    //Method to the search product by productPrice
    private void searchByPrice() {
        String query = jTxtSrchProd.getText();//Declaration of local variable
        ArrayList<Product> tempProds = new ArrayList<>(); //creating a tempProds arraylist object.
        if( ! query.isEmpty() ) {
            // Binary Search Algorithm
            // Declaration of local variables
            int qPrice = Integer.parseInt(query);
            int firstIndex = 0;
            int lastIndex = products.size() - 1;
            int mid;
            //This function helps to compare the first index and last index
            while( firstIndex <= lastIndex ) {
                mid = (int) Math.floor(( firstIndex + lastIndex ) / 2 );//gets the average of the first and lastindex
                if( products.get(mid).getPrice() < qPrice ) {//array values less than the query price are dropped from the search
                    firstIndex = mid + 1;
                } else if( products.get(mid).getPrice() > qPrice ) {//array values greater than query price are searched.
                    lastIndex = mid - 1;
                } else {
                    tempProds.add( products.get(mid));//the resulted value is added.
                    break;
                }
            }
        } else {
            tempProds.addAll(products);//adds all the specified elements to the specified collection.
        }
            if( ! tempProds.isEmpty() ) {
                this.displayTableRows(tempProds);//displays the result in the table
            } else {
                this.displayTableRows(products);
                //System.out.println("NO entries found!"); // Display joptionpane.
                JOptionPane.showMessageDialog(jMenu1,"No entries found, click ok to continue.");//displays if the no entries are found.
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jTxtProdName = new javax.swing.JTextField();
        jTxtProdID = new javax.swing.JTextField();
        jLblProdID = new javax.swing.JLabel();
        jLblProdName = new javax.swing.JLabel();
        jLblDesc = new javax.swing.JLabel();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jRBCmnty = new javax.swing.JRadioButton();
        jLblRecom = new javax.swing.JLabel();
        jRBUser = new javax.swing.JRadioButton();
        jRBCmpny = new javax.swing.JRadioButton();
        jRBNoReccom = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jProdTable = new javax.swing.JTable();
        jBtnAdd = new javax.swing.JButton();
        jBtnUpdate = new javax.swing.JButton();
        jBtnClear = new javax.swing.JButton();
        jBtnDel = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTxtProdDes = new javax.swing.JTextArea();
        jLblCat = new javax.swing.JLabel();
        jCmbCategory2 = new javax.swing.JComboBox<>();
        jLblCstPrice = new javax.swing.JLabel();
        jTxtCstPrice = new javax.swing.JTextField();
        jTxtDisc = new javax.swing.JTextField();
        jLblDisc = new javax.swing.JLabel();
        jLblQty = new javax.swing.JLabel();
        jTxtQty = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jBtnSrchCat = new javax.swing.JButton();
        jLblSrchProd = new javax.swing.JLabel();
        jBtnSrchProd = new javax.swing.JButton();
        jTxtSrchProd = new javax.swing.JTextField();
        jLblSrchCat = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        jLayeredPane5 = new javax.swing.JLayeredPane();
        jBtnExit = new javax.swing.JButton();
        jBtnReccomSort = new javax.swing.JButton();
        jBtnPriceSort = new javax.swing.JButton();
        jBtnImport = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuOpen = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GroceriesInformaitonSystem");
        setBackground(new java.awt.Color(34, 47, 62));

        jPanel1.setBackground(new java.awt.Color(34, 47, 62));

        jLayeredPane1.setBackground(new java.awt.Color(46, 204, 113));
        jLayeredPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTxtProdID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtProdIDActionPerformed(evt);
            }
        });

        jLblProdID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblProdID.setForeground(new java.awt.Color(255, 255, 255));
        jLblProdID.setText("Product ID:");

        jLblProdName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblProdName.setForeground(new java.awt.Color(255, 255, 255));
        jLblProdName.setText("Product Name:");

        jLblDesc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblDesc.setForeground(new java.awt.Color(255, 255, 255));
        jLblDesc.setText("Description:");

        jLayeredPane3.setBackground(new java.awt.Color(34, 47, 62));
        jLayeredPane3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        buttonGroup1.add(jRBCmnty);
        jRBCmnty.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jRBCmnty.setForeground(new java.awt.Color(255, 255, 255));
        jRBCmnty.setText("Community");

        jLblRecom.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblRecom.setForeground(new java.awt.Color(255, 255, 255));
        jLblRecom.setText("Recommended by:");

        buttonGroup1.add(jRBUser);
        jRBUser.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jRBUser.setForeground(new java.awt.Color(255, 255, 255));
        jRBUser.setText("User");

        buttonGroup1.add(jRBCmpny);
        jRBCmpny.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jRBCmpny.setForeground(new java.awt.Color(255, 255, 255));
        jRBCmpny.setText("Company");

        buttonGroup1.add(jRBNoReccom);
        jRBNoReccom.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jRBNoReccom.setForeground(new java.awt.Color(255, 255, 255));
        jRBNoReccom.setText("No Recommendation");

        jLayeredPane3.setLayer(jRBCmnty, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLblRecom, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jRBUser, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jRBCmpny, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jRBNoReccom, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane3Layout = new javax.swing.GroupLayout(jLayeredPane3);
        jLayeredPane3.setLayout(jLayeredPane3Layout);
        jLayeredPane3Layout.setHorizontalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addComponent(jLblRecom)
                .addGap(26, 26, 26)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addComponent(jRBCmnty)
                        .addGap(18, 18, Short.MAX_VALUE))
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addComponent(jRBCmpny, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(30, 30, 30)))
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addComponent(jRBNoReccom)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addComponent(jRBUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(350, 350, 350))))
        );
        jLayeredPane3Layout.setVerticalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane3Layout.createSequentialGroup()
                .addComponent(jLblRecom)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBCmpny)
                    .addComponent(jRBUser))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBCmnty)
                    .addComponent(jRBNoReccom))
                .addGap(23, 23, 23))
        );

        jProdTable.setBackground(new java.awt.Color(123, 239, 178));
        jProdTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProductID", "Product Name", "Description", "Category", "Cost Price", "Quantity", "Discount", "Recommended by"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jProdTable.setGridColor(new java.awt.Color(0, 0, 0));
        jProdTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jProdTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jProdTable);
        if (jProdTable.getColumnModel().getColumnCount() > 0) {
            jProdTable.getColumnModel().getColumn(0).setResizable(false);
            jProdTable.getColumnModel().getColumn(1).setResizable(false);
            jProdTable.getColumnModel().getColumn(2).setResizable(false);
            jProdTable.getColumnModel().getColumn(3).setResizable(false);
            jProdTable.getColumnModel().getColumn(4).setResizable(false);
            jProdTable.getColumnModel().getColumn(5).setResizable(false);
            jProdTable.getColumnModel().getColumn(6).setResizable(false);
            jProdTable.getColumnModel().getColumn(7).setResizable(false);
        }

        jBtnAdd.setBackground(new java.awt.Color(52, 168, 83));
        jBtnAdd.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jBtnAdd.setForeground(new java.awt.Color(255, 255, 255));
        jBtnAdd.setText("Add");
        jBtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAddActionPerformed(evt);
            }
        });

        jBtnUpdate.setBackground(new java.awt.Color(251, 188, 5));
        jBtnUpdate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jBtnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        jBtnUpdate.setText("Update");
        jBtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnUpdateActionPerformed(evt);
            }
        });

        jBtnClear.setBackground(new java.awt.Color(66, 133, 244));
        jBtnClear.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jBtnClear.setForeground(new java.awt.Color(255, 255, 255));
        jBtnClear.setText("Clear");
        jBtnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnClearActionPerformed(evt);
            }
        });

        jBtnDel.setBackground(new java.awt.Color(234, 67, 53));
        jBtnDel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jBtnDel.setForeground(new java.awt.Color(255, 255, 255));
        jBtnDel.setText("Delete");
        jBtnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDelActionPerformed(evt);
            }
        });

        jTxtProdDes.setColumns(20);
        jTxtProdDes.setRows(5);
        jScrollPane2.setViewportView(jTxtProdDes);

        jLblCat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblCat.setForeground(new java.awt.Color(255, 255, 255));
        jLblCat.setText("Category:");

        jCmbCategory2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Fruits and Vegetables", "Egg and Meat", "Groceries", "Packaged food", "Miscellaneous" }));
        jCmbCategory2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmbCategory2ActionPerformed(evt);
            }
        });

        jLblCstPrice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblCstPrice.setForeground(new java.awt.Color(255, 255, 255));
        jLblCstPrice.setText("Cost Price:");

        jLblDisc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblDisc.setForeground(new java.awt.Color(255, 255, 255));
        jLblDisc.setText("Discount:");

        jLblQty.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblQty.setForeground(new java.awt.Color(255, 255, 255));
        jLblQty.setText("Quantity:");

        jLayeredPane1.setLayer(jTxtProdName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jTxtProdID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLblProdID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLblProdName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLblDesc, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLayeredPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jBtnAdd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jBtnUpdate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jBtnClear, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jBtnDel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLblCat, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jCmbCategory2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLblCstPrice, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jTxtCstPrice, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jTxtDisc, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLblDisc, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLblQty, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jTxtQty, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLblProdName)
                            .addComponent(jLblDesc)
                            .addComponent(jLblProdID)
                            .addComponent(jLblCat)
                            .addComponent(jLblCstPrice)
                            .addComponent(jLblQty)
                            .addComponent(jLblDisc))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTxtDisc, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTxtProdID)
                                        .addComponent(jTxtProdName)
                                        .addComponent(jScrollPane2)
                                        .addComponent(jCmbCategory2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTxtCstPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTxtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(57, 57, 57)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(jBtnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jBtnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jBtnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jBtnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblProdID)
                    .addComponent(jTxtProdID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLblProdName)
                            .addComponent(jTxtProdName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLblDesc)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCmbCategory2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLblCat))
                        .addGap(16, 16, 16)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLblCstPrice)
                            .addComponent(jTxtCstPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLblQty)
                            .addComponent(jTxtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblDisc)
                    .addComponent(jTxtDisc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        jPanel2.setBackground(new java.awt.Color(34, 47, 62));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 544, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(52, 168, 83)));

        jBtnSrchCat.setText("Search Category");
        jBtnSrchCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSrchCatActionPerformed(evt);
            }
        });

        jLblSrchProd.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLblSrchProd.setForeground(new java.awt.Color(255, 255, 255));
        jLblSrchProd.setText("Search Products:");

        jBtnSrchProd.setText("Search Product");
        jBtnSrchProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSrchProdActionPerformed(evt);
            }
        });

        jTxtSrchProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTxtSrchProdKeyReleased(evt);
            }
        });

        jLblSrchCat.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLblSrchCat.setForeground(new java.awt.Color(255, 255, 255));
        jLblSrchCat.setText("Search category:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fruits and Vegetables", "Egg and Meat", "Groceries", "Packaged food", "Miscellaneous" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLayeredPane2.setLayer(jBtnSrchCat, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLblSrchProd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jBtnSrchProd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jTxtSrchProd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLblSrchCat, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jComboBox2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLblSrchCat)
                .addGap(18, 18, 18)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jBtnSrchCat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLblSrchProd)
                .addGap(18, 18, 18)
                .addComponent(jTxtSrchProd, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnSrchProd)
                .addContainerGap())
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblSrchCat)
                    .addComponent(jBtnSrchCat)
                    .addComponent(jLblSrchProd)
                    .addComponent(jTxtSrchProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnSrchProd)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jLayeredPane4Layout = new javax.swing.GroupLayout(jLayeredPane4);
        jLayeredPane4.setLayout(jLayeredPane4Layout);
        jLayeredPane4Layout.setHorizontalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1168, Short.MAX_VALUE)
        );
        jLayeredPane4Layout.setVerticalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jBtnExit.setBackground(new java.awt.Color(234, 67, 53));
        jBtnExit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jBtnExit.setForeground(new java.awt.Color(255, 255, 255));
        jBtnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/finalClose.png"))); // NOI18N
        jBtnExit.setText("Exit");
        jBtnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnExitActionPerformed(evt);
            }
        });

        jBtnReccomSort.setBackground(new java.awt.Color(251, 188, 5));
        jBtnReccomSort.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jBtnReccomSort.setForeground(new java.awt.Color(255, 255, 255));
        jBtnReccomSort.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/recommendationSort.png"))); // NOI18N
        jBtnReccomSort.setText("Recommendation Sort");
        jBtnReccomSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnReccomSortActionPerformed(evt);
            }
        });

        jBtnPriceSort.setBackground(new java.awt.Color(66, 133, 244));
        jBtnPriceSort.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jBtnPriceSort.setForeground(new java.awt.Color(255, 255, 255));
        jBtnPriceSort.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/priceSort.png"))); // NOI18N
        jBtnPriceSort.setText("Price Sort");
        jBtnPriceSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPriceSortActionPerformed(evt);
            }
        });

        jBtnImport.setBackground(new java.awt.Color(52, 168, 83));
        jBtnImport.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jBtnImport.setForeground(new java.awt.Color(255, 255, 255));
        jBtnImport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/import.png"))); // NOI18N
        jBtnImport.setText("Import");
        jBtnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnImportActionPerformed(evt);
            }
        });

        jLayeredPane5.setLayer(jBtnExit, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(jBtnReccomSort, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(jBtnPriceSort, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(jBtnImport, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane5Layout = new javax.swing.GroupLayout(jLayeredPane5);
        jLayeredPane5.setLayout(jLayeredPane5Layout);
        jLayeredPane5Layout.setHorizontalGroup(
            jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jBtnImport, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jBtnReccomSort, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(jBtnPriceSort, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(jBtnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jLayeredPane5Layout.setVerticalGroup(
            jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnImport)
                    .addComponent(jBtnReccomSort, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnPriceSort, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLayeredPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLayeredPane5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLayeredPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(281, 281, 281)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(460, 460, 460)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLayeredPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLayeredPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(155, 155, 155))
        );

        jMenu1.setText("File");

        jMenuOpen.setText("Open");
        jMenuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuOpenActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuOpen);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem4.setText("Exit");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenuHelp.setText("Help");
        jMenuHelp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuHelpMouseClicked(evt);
            }
        });
        jMenuHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuHelpActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1162, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 851, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCmbCategory2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbCategory2ActionPerformed

    }//GEN-LAST:event_jCmbCategory2ActionPerformed

    private void jTxtProdIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtProdIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtProdIDActionPerformed
    //Method for the addition of the products
    private void jBtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAddActionPerformed
        //using the exception handling to check the correct and positive values
        try{//using if condition to check if all the values are entered
            if(jTxtProdID.getText().equals(" ")||jTxtProdName.getText().equals("")||jTxtProdDes.getText().equals("")||jCmbCategory2.getSelectedItem().toString( ).equals("Select") ||
               jCmbCategory2.getSelectedItem().toString( ).equals("")|| jTxtCstPrice.getText().equals("")||
               jTxtDisc.getText().equals("")||jTxtQty.getText().equals("") || null == buttonGroup1.getSelection()
               ){
                    JOptionPane.showMessageDialog(this,"Please Check and Enter All Values." );}
            else{
        
                String productID= jTxtProdID.getText();
                String productName= jTxtProdName.getText();
                String productDes= jTxtProdDes.getText();
                String category = jCmbCategory2.getSelectedItem().toString();
                Long costPrice = Long.parseLong(jTxtCstPrice.getText());
                int discount = Integer.parseInt(jTxtDisc.getText());
                int quantity = Integer.parseInt(jTxtQty.getText());
                jRBCmpny.setActionCommand("Company");
                jRBCmnty.setActionCommand("Community");
                jRBUser.setActionCommand("User");
                jRBNoReccom.setActionCommand("No Recomendation");
                RecommendedBy = buttonGroup1.getSelection().getActionCommand();    
                
                jRBCmpny.setActionCommand("Company");
                jRBCmnty.setActionCommand("Community");
                jRBUser.setActionCommand("User");
                jRBNoReccom.setActionCommand("No Recomendation");
           
            
                int pId=Integer.parseInt(productID);
                
                //throws exception if the value is in negative.
                if(pId<0 || costPrice<0 || quantity<0 || discount<0)throw new ArithmeticException();
                //Addition of the product
                Product newProduct = new Product(); // creating object newProduct.
                newProduct.setProduct_id(pId); //call class method to set the product id.
                newProduct.setProduct_name(productName);//call another class method to set the product name.
                newProduct.setDescription(productDes);//call another class method to set the product description.
                newProduct.setCategory(category);//call another class method to set the category of the product.
                newProduct.setPrice(costPrice);//call another class method to set the price.
                newProduct.setDiscount(discount);//call another class method to set the discount.
                newProduct.setQuantity(quantity);//call another class method to set the quantity.
                newProduct.setRecommendationBy(RecommendedBy);//call another class method to set the recommendation.
                products.add(newProduct);//adds the every details in the products array.
                this.displayTableRows(products);//displays every details on the table.
                //displays that the product is added. 
                 JOptionPane.showMessageDialog(this,"Product added successfully.");

            }
        
        }catch(HeadlessException | NumberFormatException ex){
                JOptionPane.showMessageDialog(this," Enter the correct value");
            }catch(ArithmeticException e){
                JOptionPane.showMessageDialog(this,"Please input positive numbers");
        }
    }//GEN-LAST:event_jBtnAddActionPerformed

    private void jBtnSrchProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSrchProdActionPerformed
       this.searchByPrice();//calls the searchByPrice function to search the price of the product.        
    }//GEN-LAST:event_jBtnSrchProdActionPerformed

    private void jTxtSrchProdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtSrchProdKeyReleased
       //checks the keycode of the enter key and search for the product price.
        if( evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.searchByPrice();
        }
        
    }//GEN-LAST:event_jTxtSrchProdKeyReleased

    private void jBtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnExitActionPerformed
        System.exit(0);//successfully terminates the program
    //JOptionPane.showMessageDialog(jMenu1, "Are you sure want to exit??");
    }//GEN-LAST:event_jBtnExitActionPerformed
    //Method to import the excel file
    private void jBtnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnImportActionPerformed
        clearTable();//calls the clearTable function to clear the table values.
        DefaultTableModel model = (DefaultTableModel)jProdTable.getModel(); //constructs the table called model and gets the info from the jProdTable
        File excelFile = null;
        FileInputStream excelFIS = null;
        BufferedInputStream excelBIS = null;
        XSSFWorkbook excelJTableImport = null;

        String currentDirectoryPath = "D:\\";
        JFileChooser excelFileChooser = new JFileChooser(currentDirectoryPath);
        int excelChooser = excelFileChooser.showOpenDialog(null);
        if (excelChooser == JFileChooser.APPROVE_OPTION) {//using this comdition to choose the excel file.
            try {
                excelFile = excelFileChooser.getSelectedFile();
                excelFIS = new FileInputStream(excelFile);
                excelBIS = new BufferedInputStream(excelFIS);

                excelJTableImport = new XSSFWorkbook(excelBIS); // Using XSSF for xlsx format
                XSSFSheet excelSheet = excelJTableImport.getSheetAt(0);
                for (int row = 0; row < excelSheet.getLastRowNum(); row++) { //using loop over each excel sheet to iterate each row
                   
                    Row excelRow = excelSheet.getRow(row);
              
                    Cell excelId =excelRow.getCell(0); //cell containing the product id 
                    Cell excelName = excelRow.getCell(1);//cell containing the product name
                    Cell excelDescription = excelRow.getCell(2);//cell containing the product description
                    Cell excelCategory = excelRow.getCell(3);//cell containing the product category
                    Cell excelCostPrice = excelRow.getCell(4);//cell containing the price of the product
                    Cell excelQuantity = excelRow.getCell(6);//cell containing  the quantity
                    Cell excelDiscount = excelRow.getCell(5);//cell containing the discount
                    Cell excelRecommendationBy = excelRow.getCell(7);//cell containing the recommendation
                //addition of every values into the arraylist
                    products.add(new Product(
                            (int)Float.parseFloat(excelId.toString()),
                            excelName.getStringCellValue(),
                            excelDescription.getStringCellValue(),
                            excelCategory.getStringCellValue(),
                            (int)Float.parseFloat(excelCostPrice.toString()),
                            (int)Float.parseFloat(excelQuantity.toString()),
                            (int)Float.parseFloat(excelDiscount.toString()),
                            excelRecommendationBy.getStringCellValue()));
                }
                this.displayTableRows(products);//calls the displayTableRows function
                excelBIS.close();
                excelFIS.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GroceriesInfo.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(GroceriesInfo.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_jBtnImportActionPerformed

    public GroceriesInfo(ArrayList<Product> products) throws HeadlessException {
        this.products = products;
    }

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        dispose();//successfully terminates the program
    }//GEN-LAST:event_jMenuItem4ActionPerformed
    
    private void jMenuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuOpenActionPerformed
        DefaultTableModel model = (DefaultTableModel)jProdTable.getModel();//constructs the table called model and gets the info from the jProdTable
        File excelFile = null;
        FileInputStream excelFIS = null;
        BufferedInputStream excelBIS = null;
        XSSFWorkbook excelJTableImport = null;

        String currentDirectoryPath = "D:\\";//directory path of the excel file
        JFileChooser excelFileChooser = new JFileChooser(currentDirectoryPath);
        int excelChooser = excelFileChooser.showOpenDialog(null);
        if (excelChooser == JFileChooser.APPROVE_OPTION) {//using this comdition to choose the excel file.
            try {
                excelFile = excelFileChooser.getSelectedFile();
                excelFIS = new FileInputStream(excelFile);
                excelBIS = new BufferedInputStream(excelFIS);

                excelJTableImport = new XSSFWorkbook(excelBIS);// Using XSSF for xlsx format
                XSSFSheet excelSheet = excelJTableImport.getSheetAt(0);
                for (int row = 0; row < excelSheet.getLastRowNum(); row++) {
                   
                    Row excelRow = excelSheet.getRow(row);
              
                    Cell excelId =excelRow.getCell(0);//cell containing the product id 
                    Cell excelName = excelRow.getCell(1);//cell containing the product name
                    Cell excelDescription = excelRow.getCell(2);//cell containing the product description
                    Cell excelCategory = excelRow.getCell(3);//cell containing the product category
                    Cell excelCostPrice = excelRow.getCell(4);//cell containing the price of the product
                    Cell excelQuantity = excelRow.getCell(6);//cell containing  the quantity
                    Cell excelDiscount = excelRow.getCell(5);//cell containing the discount
                    Cell excelRecommendationBy = excelRow.getCell(7);//cell containing the recommendation
               //addition of every values into the arraylist
                    products.add(new Product(
                            (int)Float.parseFloat(excelId.toString()),
                            excelName.getStringCellValue(),
                            excelDescription.getStringCellValue(),
                            excelCategory.getStringCellValue(),
                            (int)Float.parseFloat(excelCostPrice.toString()),
                            (int)Float.parseFloat(excelQuantity.toString()),
                            (int)Float.parseFloat(excelDiscount.toString()),
                            excelRecommendationBy.getStringCellValue()));
                }
                this.displayTableRows(products);//calls the displayTableRows function
                excelBIS.close();
                excelFIS.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GroceriesInfo.class.getName()).log(Level.SEVERE, null, ex);//used to find a logger with exception
            } catch (IOException ex) {
                Logger.getLogger(GroceriesInfo.class.getName()).log(Level.SEVERE, null, ex);//used to find a logger with exception
            }

        }
   
    }//GEN-LAST:event_jMenuOpenActionPerformed
//This method is used to clear every textfield,radiobutton, and combobox
    private void jBtnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnClearActionPerformed
        jTxtProdID.setText("");
        jTxtProdName.setText("");
        jTxtProdDes.setText("");
        jComboBox2.setSelectedIndex(0);
        jCmbCategory2.setSelectedIndex(0);
        jTxtCstPrice.setText("");
        jTxtDisc.setText("");
        jTxtQty.setText("");
        jRBCmpny.setSelected(false);
        jRBCmnty.setSelected(false);
        jRBUser.setSelected(false);
        jRBNoReccom.setSelected(false);
        jProdTable.clearSelection();
        clearTable();
        jTxtSrchProd.setText("");
        jRBCmpny.setSelected(true);
        products.clear();  
        JOptionPane.showMessageDialog(this,"Successfully cleared all the values.");//Displays the message after clearing all the values.
              
    }//GEN-LAST:event_jBtnClearActionPerformed
    //This method is used to update the products details
    private void jBtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnUpdateActionPerformed
      //uses the condition to check if the all values are entered
        if(jTxtProdID.getText().equals(" ")||jTxtProdName.getText().equals("")||jTxtProdDes.getText().equals("")||jCmbCategory2.getSelectedItem().toString( ).equals("Select") ||
               jCmbCategory2.getSelectedItem().toString( ).equals("")|| jTxtCstPrice.getText().equals("")||
               jTxtDisc.getText().equals("")||jTxtQty.getText().equals("") || null == buttonGroup1.getSelection()
               ){
                    JOptionPane.showMessageDialog(this,"Please Check and Enter All Values." );}
            else{        
                DefaultTableModel tblModel = (DefaultTableModel)jProdTable.getModel();//constructs the table called tblModel and gets the info from the jProdTable
                if(jProdTable.getSelectedRowCount() == 1){//counts the row to update 
                    //if single row is selected than update the data's

                    jRBCmpny.setActionCommand("Company");
                    jRBCmnty.setActionCommand("Community");
                    jRBUser.setActionCommand("User");
                    jRBNoReccom.setActionCommand("No Recomendation");
                    Product newProduct = new Product();
                    newProduct.setProduct_id(Integer.parseInt(jTxtProdID.getText()));
                    newProduct.setProduct_name(jTxtProdName.getText());
                    newProduct.setDescription(jTxtProdDes.getText());
                    newProduct.setCategory(jCmbCategory2.getSelectedItem().toString());
                    newProduct.setPrice(Long.parseLong(jTxtCstPrice.getText()));
                    newProduct.setDiscount(Integer.parseInt(jTxtDisc.getText()));
                    newProduct.setQuantity(Integer.parseInt(jTxtQty.getText()));
                    newProduct.setRecommendationBy(buttonGroup1.getSelection().getActionCommand());
                    products.add(newProduct);
                    this.displayTableRows(products);
         
                    //            String category="";
                    //            String productID=jTxtProdID.getText();
                    //            String productName= jTxtProdName.getText();
                    //            String productDes= jTxtProdDes.getText();
                    //            category = jCmbCategory1.getSelectedItem().toString();
                    //            String costPrice = jTxtCstPrice.getText();
                    //            String discount = jTxtDisc.getText();
                    //            String quantity = jTxtQty.getText();
                    //            //set updated value on table row
                    //            String RecommendedBy = buttonGroup1.getSelection().getActionCommand();
                    //
                    //            tblModel.setValueAt(productID, jProdTable.getSelectedRow(), 0);
                    //            tblModel.setValueAt(productName, jProdTable.getSelectedRow(), 1);
                    //            tblModel.setValueAt(productDes, jProdTable.getSelectedRow(), 2);
                    //            tblModel.setValueAt(category, jProdTable.getSelectedRow(), 3);
                    //            tblModel.setValueAt(costPrice, jProdTable.getSelectedRow(), 4);
                    //            tblModel.setValueAt(discount, jProdTable.getSelectedRow(), 5);
                    //            tblModel.setValueAt(quantity, jProdTable.getSelectedRow(), 6);
                    //            tblModel.setValueAt(RecommendedBy, jProdTable.getSelectedRow(), 7);
                                //Displaying update message
                    JOptionPane.showMessageDialog(this, "Row is updated successfully");
                }else{
                    if(jProdTable.getRowCount() == 0){
                        //if table is empty
                        JOptionPane.showMessageDialog(this, "Empty table is selected");
                    }else{
                        //if row is not selected or multiple row are selected than
                        JOptionPane.showMessageDialog(this, "Please select single row for Update");
                    }
                }
            }
    }//GEN-LAST:event_jBtnUpdateActionPerformed

    private void jBtnPriceSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPriceSortActionPerformed
        sortProduct("product_price");//calls the sortProduct funtion to sort the price in accesending order.
    }//GEN-LAST:event_jBtnPriceSortActionPerformed

    private void jBtnReccomSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnReccomSortActionPerformed
        sortProduct("product_recommendedby");//calls the sortProduct funciton to sort the products acording to the recommendation.
    }//GEN-LAST:event_jBtnReccomSortActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jBtnSrchCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSrchCatActionPerformed
        //Declaration of local variables
        String result;
        int count = 0;//initialising the count
        String searchCategory = (String)jComboBox2.getSelectedItem();
        String listOfItems = "";
        for (int i = 0; i < jProdTable.getRowCount(); i++){//looping to get the row count from the jProdTable
            String value = (String) jProdTable.getValueAt(i,3);
            System.out.print(value);
            //selects the products according to the category selected
            if (searchCategory.equals(value)){
                String Product_ID = String.valueOf(jProdTable.getValueAt(i,0));
                String Product_Name = String.valueOf(jProdTable.getValueAt(i,1));
                String Product_Desc = String.valueOf(jProdTable.getValueAt(i,2));
                String Cost_Price = String.valueOf(jProdTable.getValueAt(i,4));
                String Discount = String.valueOf(jProdTable.getValueAt(i,5));
                String Quantity = String.valueOf(jProdTable.getValueAt(i,6));
                String Recomendation = String.valueOf(jProdTable.getValueAt(i,7));
                count++;
                listOfItems += String.valueOf(count)+".Product ID = "+ Product_ID +" ,Product Name = " +Product_Name+" ,Description = " +Product_Desc+  " ,Cost Price = "+Cost_Price+ " ,Discount = "+Discount + " ,Quantity = "+Quantity + " ,Recomendation By : "+ Recomendation +"\n";
                }
        }
        result =  count + " Products were found with the given category :\n" + listOfItems;//displays the products thats were found in the category
        JOptionPane.showMessageDialog(null, result, "Match Found!", JOptionPane.INFORMATION_MESSAGE);//displays the result
    }//GEN-LAST:event_jBtnSrchCatActionPerformed
    //This method helps to get the values of the selected row in the respective textfield. 
    private void jProdTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProdTableMousePressed
        //declaration of local variables  
        Point point = evt.getPoint();
        int row = jProdTable.rowAtPoint(point);
        if (evt.getClickCount() == 2 && jProdTable.getSelectedRow() != -1) {//uses condition to get the click count and the values of the selected row
//            JOptionPane.showMessageDialog(null, "Double clicked! Row: " + row);
            jTxtProdID.setText(jProdTable.getModel().getValueAt(row, 0).toString());
            jTxtProdName.setText(jProdTable.getModel().getValueAt(row, 1).toString());
            jCmbCategory2.getModel().setSelectedItem(jProdTable.getModel().getValueAt(row, 3).toString());
            jTxtProdDes.setText(jProdTable.getModel().getValueAt(row, 2).toString());
            jTxtCstPrice.setText(jProdTable.getModel().getValueAt(row, 4).toString());
            jTxtDisc.setText(jProdTable.getModel().getValueAt(row, 6).toString());
            jTxtQty.setText(jProdTable.getModel().getValueAt(row, 5).toString());
            buttonGroup1.clearSelection();
            switch( jProdTable.getModel().getValueAt(row, 7).toString() ) {
                case "Company":
                    jRBCmpny.setSelected(true);
                    break;
                case "User":
                    jRBUser.setSelected(true);
                    break;
                case "Community":
                    jRBCmnty.setSelected(true);
                    break;
                default:
                    jRBNoReccom.setSelected(true);
                    break;
            }
            
            //JOptionPane.showMessageDialog(null, "Double clicked! : " + jProdTable.getModel().getValueAt(row, 3).toString());
        }
    }//GEN-LAST:event_jProdTableMousePressed
    //This method helps to delete the selected row from the table
    private void jBtnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDelActionPerformed
        int getSeletedRow=jProdTable.getSelectedRow();//gets the info of the selected row
        DefaultTableModel tblModel = (DefaultTableModel) jProdTable.getModel();//constructs the table called tblModel and gets the info from the jProdTable
  
        if(getSeletedRow>=0){//checks the selected row and deletes the row
            tblModel.removeRow(getSeletedRow);
            JOptionPane.showMessageDialog(this,"The row is deleted.");//displays that the row is deleted
        }else{
            if(jProdTable.getRowCount()==0){//checks if there is rows or not
                JOptionPane.showMessageDialog(this,"This table is empty.");//displays that the table is empty
            }else{
                JOptionPane.showMessageDialog(this, "Please select single row for deleting data's.");// displays that the row is not selected
            }
        }
    }//GEN-LAST:event_jBtnDelActionPerformed

    private void jMenuHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuHelpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuHelpActionPerformed
    //Method helps to get the pdf file when the menu item is clicked
    private void jMenuHelpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuHelpMouseClicked
        if(Desktop.isDesktopSupported()){
            //using exception handling if the fle is not supported
            try{
                Desktop.getDesktop().open(new File("D:\\netbeansProject\\Groceries_IS\\src\\help.pdf"));//directory path of the pdf file
            }
            catch(IOException e){
                System.out.println(e);
            }
        }
        else{
            System.out.println("not supported");
        }
    }//GEN-LAST:event_jMenuHelpMouseClicked
    //Method helps for sorting
    public void sortProduct(String sortProductBy){
//        ArrayList<Product> tempData = new ArrayList<>();
        Product tempData;//declaration of the product
        for(int i=0;i<products.size();i++){//looping to get the array size, initial expression is initialized to 0, update expression is incremented
            for(int j=1;j<products.size();j++){
                Product firstData=products.get(j);//selection of the first data from the arraylist
                Product secondData=products.get(j-1);//selection of the second data from the arraylist
                System.out.println(firstData.getPrice());//displays the price 
                if(sortProductBy.equals("product_price")){
                    if(firstData.getPrice() < secondData.getPrice()){//comparision of the price to display the one price if both of the product has same price
                        tempData = products.get(j);
                        products.set(j,products.get(j-1));
                        products.set(j-1,tempData);   
                    }
                }else if(firstData.getRecommendationBy().compareToIgnoreCase(secondData.getRecommendationBy())<0){//sorts the products according to the recommendation
                    tempData=products.get(j);
                    products.set(j, products.get(j-1));
                    products.set(j-1, tempData);
                }   
            }
        }
        this.displayTableRows(products);//updates the info in the table
             

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GroceriesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GroceriesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GroceriesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GroceriesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GroceriesInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBtnAdd;
    private javax.swing.JButton jBtnClear;
    private javax.swing.JButton jBtnDel;
    private javax.swing.JButton jBtnExit;
    private javax.swing.JButton jBtnImport;
    private javax.swing.JButton jBtnPriceSort;
    private javax.swing.JButton jBtnReccomSort;
    private javax.swing.JButton jBtnSrchCat;
    private javax.swing.JButton jBtnSrchProd;
    private javax.swing.JButton jBtnUpdate;
    private javax.swing.JComboBox<String> jCmbCategory2;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JLayeredPane jLayeredPane5;
    private javax.swing.JLabel jLblCat;
    private javax.swing.JLabel jLblCstPrice;
    private javax.swing.JLabel jLblDesc;
    private javax.swing.JLabel jLblDisc;
    private javax.swing.JLabel jLblProdID;
    private javax.swing.JLabel jLblProdName;
    private javax.swing.JLabel jLblQty;
    private javax.swing.JLabel jLblRecom;
    private javax.swing.JLabel jLblSrchCat;
    private javax.swing.JLabel jLblSrchProd;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuOpen;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTable jProdTable;
    private javax.swing.JRadioButton jRBCmnty;
    private javax.swing.JRadioButton jRBCmpny;
    private javax.swing.JRadioButton jRBNoReccom;
    private javax.swing.JRadioButton jRBUser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTxtCstPrice;
    private javax.swing.JTextField jTxtDisc;
    private javax.swing.JTextArea jTxtProdDes;
    private javax.swing.JTextField jTxtProdID;
    private javax.swing.JTextField jTxtProdName;
    private javax.swing.JTextField jTxtQty;
    private javax.swing.JTextField jTxtSrchProd;
    // End of variables declaration//GEN-END:variables
    
    //clears all the table values
    private void clearTable(){
            DefaultTableModel productDetailModel = (DefaultTableModel) jProdTable.getModel();//constructs the table called productDetailModel and gets the info from the jProdTable
  
            int rowcount = productDetailModel.getRowCount();//gets the row count from  the table and stores into the varaiable rowcount
            for(int intable = 0; intable < rowcount; intable++){//using loop to remove the rows 
                productDetailModel.removeRow(0);
            }
        }

}
